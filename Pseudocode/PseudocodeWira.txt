constant NMAX : integer = 1001

    type Pelanggan : <
        nama, gender    string
        usia            integer
        saldo           real
        membership      string 
    >

    type tabPelanggan array [0..NMAX] of Pelanggan

type DataPelanggan : <
    tabel           tabPelanggan
    nPelanggan      integer
>

procedure DataDiri(in/out data : DataPelanggan)
{terdefinisi tipe bentukan data untuk menginput data diri kemudian
 menghasilkan ke dalam bentuk array}
kamus
nama : string
usia : interger
saldo : float64
JenisKelamin : string
n : interger

algoritma
    print("Masukkan Jumlah data : ")
    input(n)
    for i <- 0 to n do 
        input(nama, JenisKelamin, usia, saldo)
        data.tabel[i].nama <- nama
        data.tabel[i].usia <- usia
        data.tabel[i].gender <- JenisKelamin
        data.tabel[i].saldo <- saldo
        i++
    endfor
    data.nPelanggan <- nama
endprocedure

function findMinAndMax(data: dataPelanggan, min,max : integer)
{terdefinisi tipe bentukan data untuk mencari nilai minimum dan maksimum dari value usia}
kamus
    value : interger
    n : interger
algoritma
    n <- 0
    min <- data.tabel[0].usia
    max <- data.tabel[0].usia
    for _, value.usia <- range data.tabel do
        if value.usia < min and n < data.nPelanggang then
            min <- value.usia
        if value.usia > max then
            max <- value.usia
        endif
        n++
    return min, max
endfunction

function counter(data : dataPelanggan)
{terdefinisi tipe bentukan data untuk mencari total jumlah membership}
kamus 
    Silver : interger
    Gold : interger
    Platinum : interger

algoritma
    Silver <- 0
    Gold <- 0
    Platinum <- 0

    for i <- 0 to NMAX do
        if data.tabel[i].membership <- "Silver" then
            Silver = Silver + 1
        else if data.tabel[i].membership <- "Gold" then
            Gold = Gold + 1
        else if data.tabel[i].membership == "Platinum" then
            Platinum = Platinum + 1
        endif
    return Silver, Gold, Platinum
endfuction 


