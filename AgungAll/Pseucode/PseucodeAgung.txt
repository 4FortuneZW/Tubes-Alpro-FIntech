constant NMAX : integer = 1001

type Pelanggan : <
    nama, gender    string
    usia            integer
    saldo           real
    membership      string 
>

type tabPelanggan array [0..NMAX] of Pelanggan

type DataPelanggan : <
    tabel           tabPelanggan
    nPelanggan      integer
>

function totalSaldoPelanggan(data DataPelanggan) real
{terdefinisi tipe bentukan data untuk mendapatkan banyak data bilangan bulat serta tabel saldo bilangan real
kemudian mengembalikan jumlah total saldo pelanggan berupa bilangan real}
kamus
    total : real
algoritma
    total <- 0
    for i <- 0 to data.nPelanggan-1 do
        total <- total + data.tabel[i].saldo
    endfor
    return total
endfunction

function rata2Usia(data DataPelanggan) integer 
{terdefinisi tipe bentukan data untuk mendapatkan banyak data dan usia bilangan bulat
kemudian melakukan penjumlahan usia dibagi banyak data nPelanggan untuk mengembalikan
nilai rata-rata usia bertipe bilangan bulat}
kamus
    total : integer
    rata2 : integer
algoritma
    total <- 0
    rata <- 0
    for i <- 0 to data.nPelanggan-1 do
        total <- total + data.tabel[i].usia
    endfor
    rata2 <- total / data.nPelanggan
endfunction

function rata2SaldoPermembership(data DataPelanggan, member string) real
{terdefinisi tipe bentukan data untuk mendapatkan banyaknya data bilangan bulat dan tabel saldo bilangan real
serta terdefinisi member Silver/Gold/Platinum berupa string untuk mencari total dan jumlah salah satunya
fungsi ini mengembalikan nilai rata-rata saldo sesuai keanggotaan member}
kamus
    total : real
    count : integer
algoritma
    total <- 0
    count <- 0
    for i <- 0 to data.nPelanggan-1 do
		if data.tabel[i].membership == "Silver" and member == "Silver" then
			total <- total + data.tabel[i].saldo
			count <- count + 1
		else if data.tabel[i].membership == "Gold" and member == "Gold" then
			total <- total + data.tabel[i].saldo
			count <- count + 1
		else if data.tabel[i].membership == "Platinum" and member == "Platinum" then
			total <- total + data.tabel[i].saldo
			count <- count + 1
        endif
    endfor
    if member == "Silver"  or ember == "Gold" or member == "Platinum" then
		return total / count
    endif
	return -1
endfunction

function rata2UsiaPermembership(data DataPelanggan, member string) integer
{terdefinisi tipe bentukan data untuk mendapatkan banyaknya data dan tabel usia bilangan bulat
serta terdefinisi member Silver/Gold/Platinum berupa string untuk mencari total dan jumlah salah satunya
fungsi ini mengembalikan nilai rata-rata usia sesuai keanggotaan member}
kamus
    total : real
    count : integer
algoritma
    total <- 0
    count <- 0
    for i <- 0 to data.nPelanggan-1 do
		if data.tabel[i].membership == "Silver" and member == "Silver" then
			total <- total + data.tabel[i].saldo
			count <- count + 1
		else if data.tabel[i].membership == "Gold" and member == "Gold" then
			total <- total + data.tabel[i].saldo
			count <- count + 1
		else if data.tabel[i].membership == "Platinum" and member == "Platinum" then
			total <- total + data.tabel[i].saldo
			count <- count + 1
        endif
    endfor
    if member == "Silver"  or ember == "Gold" or member == "Platinum" then
		return total / count
    endif
	return -1
endfunction
